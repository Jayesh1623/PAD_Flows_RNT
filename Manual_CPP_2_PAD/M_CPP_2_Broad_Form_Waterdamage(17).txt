Excel.SetActiveWorksheet.ActivateWorksheetByName Instance: ExcelInstance Name: $'''Broadform Water Damage'''
Text.ParseText.RegexParseForFirstOccurrence Text: ExtractedPDFText TextToFind: $'''(?<=BROAD FORM WATER DAMAGE PROPOSED COVERAGE\\s).*(\\n.*)*(?=SCHEDULED BROAD FORM WATER DAMAGE)|(?<=BROAD FORM WATER DAMAGE PROPOSED COVERAGE\\s).*(\\n.*)*(?=Total Broad Form Water Damage Premium)''' StartingPosition: 0 IgnoreCase: False Match=> Match
Text.ParseText.RegexParse Text: Match TextToFind: $'''\\d+.*(?<=[$]).*''' StartingPosition: 0 IgnoreCase: False Matches=> Code_list
Text.ParseText.RegexParseForFirstOccurrence Text: Match TextToFind: $'''(?<=Maximum Per “Occurrence” Limit Of Insurance\\s).*''' StartingPosition: 0 IgnoreCase: False Match=> Max_Per_Occ_Limit_Ins
Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Max_Per_Occ_Limit_Ins Column: $'''B''' Row: 1
Text.ParseText.RegexParseForFirstOccurrence Text: Match TextToFind: $'''(?<=Maximum Annual Aggregate Limit Of Insurance\\s).*''' StartingPosition: 0 IgnoreCase: False Match=> Max_Ann_Agg_Limit_Ins
Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Max_Ann_Agg_Limit_Ins Column: $'''B''' Row: 2
Text.ParseText.RegexParseForFirstOccurrence Text: Match TextToFind: $'''(?<=Per “Occurrence” - Limit Of Insurance\\s).*''' StartingPosition: 0 IgnoreCase: False Match=> Per_Occ_Limit_Ins
Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Per_Occ_Limit_Ins Column: $'''F''' Row: 2
Text.ParseText.RegexParseForFirstOccurrence Text: Match TextToFind: $'''(?<=Annual Aggregate - Limit Of Insurance\\s).*''' StartingPosition: 0 IgnoreCase: False Match=> Ann_Agg_Limit_Ins
Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Ann_Agg_Limit_Ins Column: $'''F''' Row: 3
Text.ParseText.RegexParseForFirstOccurrence Text: Match TextToFind: $'''(?<=Premium\\s)\\$\\d{0,9},?\\d{0,9},?\\d{0,9}''' StartingPosition: 0 IgnoreCase: False Match=> Premium
Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Premium Column: $'''F''' Row: 4
Text.ParseText.RegexParseForFirstOccurrence Text: ExtractedPDFText TextToFind: $'''(?<=Additional Premium to Meet Minimum Premium\\s).*(?=\\sTotal Broad Form Water Damage Premium)''' StartingPosition: 0 IgnoreCase: False Match=> Add_Pre_Meet_Min_Pre
Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Add_Pre_Meet_Min_Pre Column: $'''M''' Row: 1
Text.ParseText.RegexParseForFirstOccurrence Text: ExtractedPDFText TextToFind: $'''(?<=Total Broad Form Water Damage Premium\\s)\\$\\d+,?\\d+,?\\d+''' StartingPosition: 0 IgnoreCase: False Match=> Total_Water_Damage_Premi
Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Total_Water_Damage_Premi Column: $'''M''' Row: 2
SET RowIndex TO 2
Excel.GetFirstFreeRowOnColumn Instance: ExcelInstance Column: $'''E''' FirstFreeRowOnColumn=> FirstFreeRowColumn_E
LOOP FOREACH CurrentItem IN Code_list
    Excel.GetFirstFreeRowOnColumn Instance: ExcelInstance Column: $'''E''' FirstFreeRowOnColumn=> FirstFreeRowColumn_E
    Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem TextToFind: $'''^\\d+(?=\\s\\d+.*[,])''' StartingPosition: 0 IgnoreCase: False Match=> Location_No
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Location_No Column: $'''E''' Row: FirstFreeRowColumn_E
    Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem TextToFind: $'''(?<=\\d+\\s)\\d+(?=\\s\\d+)''' StartingPosition: 0 IgnoreCase: False Match=> Building_No
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Building_No Column: $'''F''' Row: FirstFreeRowColumn_E
    Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem TextToFind: $'''(?<=\\d+\\s\\d+\\s).*(?=\\s\\$.*\\$.*)|(?<=\\d+\\s\\d+\\s).*(?=\\s\\$\\d+)''' StartingPosition: 0 IgnoreCase: False Match=> Building_Address
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Building_Address Column: $'''G''' Row: FirstFreeRowColumn_E
    Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem TextToFind: $'''\\$.*(?=\\s\\$)''' StartingPosition: 0 IgnoreCase: False Match=> Building_Deductible
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Building_Deductible Column: $'''H''' Row: FirstFreeRowColumn_E
    Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem TextToFind: $'''(?<=\\d+\\s)\\$\\d{0,9},?\\d{0,9},?\\d{0,9}''' StartingPosition: 0 IgnoreCase: False Match=> Propert_Deductible
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Propert_Deductible Column: $'''I''' Row: FirstFreeRowColumn_E
END
Text.ParseText.RegexParseForFirstOccurrence Text: ExtractedPDFText TextToFind: $'''SCHEDULED BROAD FORM WATER DAMAGE''' StartingPosition: 0 IgnoreCase: False Match=> Schedule_Water_Damage
IF IsNotEmpty(Schedule_Water_Damage) THEN
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''SCHEDULED BROAD FORM WATER DAMAGE''' Column: $'''P''' Row: 1
    Text.ParseText.RegexParseForFirstOccurrence Text: ExtractedPDFText TextToFind: $'''(?<=SCHEDULED BROAD FORM WATER DAMAGE\\s).*(\\n.*)*(?=Total Broad Form Water Damage Premium)''' StartingPosition: 0 IgnoreCase: False Match=> Schedule_Water_Damage_Data
    Text.ParseText.RegexParseForFirstOccurrence Text: Schedule_Water_Damage_Data TextToFind: $'''(?<=Per “Occurrence” - Limit Of Insurance\\s).*''' StartingPosition: 0 IgnoreCase: False Match=> Per_Occ_Limit_Ins
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''Per “Occurrence” - Limit Of Insurance''' Column: $'''P''' Row: 2
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Per_Occ_Limit_Ins Column: $'''Q''' Row: 2
    Text.ParseText.RegexParseForFirstOccurrence Text: Schedule_Water_Damage_Data TextToFind: $'''(?<=Annual Aggregate - Limit Of Insurance\\s).*''' StartingPosition: 0 IgnoreCase: False Match=> Ann_Agg_Limit_Ins
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''Annual Aggregate - Limit Of Insurance''' Column: $'''P''' Row: 3
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Ann_Agg_Limit_Ins Column: $'''Q''' Row: 3
    Text.ParseText.RegexParseForFirstOccurrence Text: Schedule_Water_Damage_Data TextToFind: $'''(?<=Premium\\s)\\$\\d{0,9},?\\d{0,9},?\\d{0,9}''' StartingPosition: 0 IgnoreCase: False Match=> Premium
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''Premium''' Column: $'''P''' Row: 4
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Premium Column: $'''Q''' Row: 4
    Text.ParseText.RegexParse Text: Schedule_Water_Damage_Data TextToFind: $'''\\d+.*(?<=[$]).*''' StartingPosition: 0 IgnoreCase: False Matches=> Code_list2
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''Location No.''' Column: $'''P''' Row: 5
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''Building No.''' Column: $'''Q''' Row: 5
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''Building Address''' Column: $'''R''' Row: 5
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''Building Deductible''' Column: $'''S''' Row: 5
    Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: $'''Personal Property Deductible''' Column: $'''T''' Row: 5
    LOOP FOREACH CurrentItem2 IN Code_list2
        Excel.GetFirstFreeRowOnColumn Instance: ExcelInstance Column: $'''P''' FirstFreeRowOnColumn=> FirstFreeRowColumn_P
        Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem2 TextToFind: $'''(?<=\\d+\\s)\\$\\d{0,9},?\\d{0,9},?\\d{0,9}''' StartingPosition: 0 IgnoreCase: False Match=> Propert_Deductible
        Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem2 TextToFind: $'''^\\d+(?=\\s\\d+.*[,])''' StartingPosition: 0 IgnoreCase: False Match=> Location_No
        Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Location_No Column: $'''P''' Row: FirstFreeRowColumn_P
        Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem2 TextToFind: $'''(?<=\\d+\\s)\\d+(?=\\s\\d+)''' StartingPosition: 0 IgnoreCase: False Match=> Building_No
        Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Building_No Column: $'''Q''' Row: FirstFreeRowColumn_P
        Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem2 TextToFind: $'''(?<=\\d+\\s\\d+\\s).*(?=\\s\\$.*\\$.*)|(?<=\\d+\\s\\d+\\s).*(?=\\s\\$\\d+)''' StartingPosition: 0 IgnoreCase: False Match=> Building_Address
        Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Building_Address Column: $'''R''' Row: FirstFreeRowColumn_P
        Text.ParseText.RegexParseForFirstOccurrence Text: CurrentItem2 TextToFind: $'''\\$\\d+,?\\d+,?\\d+(?=\\s\\$)''' StartingPosition: 0 IgnoreCase: False Match=> Building_Deductible
        Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Building_Deductible Column: $'''S''' Row: FirstFreeRowColumn_P
        Excel.WriteToExcel.WriteCell Instance: ExcelInstance Value: Propert_Deductible Column: $'''T''' Row: FirstFreeRowColumn_P
    END
END
